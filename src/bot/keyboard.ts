import { t } from 'i18next';
import {
  type InlineKeyboardMarkup,
  type ReplyKeyboardMarkup,
} from 'node-telegram-bot-api';
import { dataFaq } from 'constants/faq';

class Keyboard {
  Main(): ReplyKeyboardMarkup {
    return {
      keyboard: [
        [{ text: `üë§ ${t('–ü—Ä–æ—Ñ–∏–ª—å')}` }, { text: `üëÅÔ∏è ${t('–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å')}` }],
        [{ text: `‚≠êÔ∏è ${t('–ü–æ–¥–ø–∏—Å–∫–∞')}` }, { text: `‚ùì ${t('–ü–æ–º–æ—â—å')}` }],
        [{ text: t('–Ø–∑—ã–∫') }],
      ],
      resize_keyboard: true,
    };
  }

  async Profile(): Promise<InlineKeyboardMarkup> {
    return {
      inline_keyboard: [
        [
          {
            text: t('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'),
            callback_data: JSON.stringify({ action: 'remove_me' }),
          },
        ],
      ],
    };
  }

  Observe(): InlineKeyboardMarkup {
    return {
      inline_keyboard: [
        [
          {
            text: 'üß© Kufar.by',
            callback_data: JSON.stringify({ action: 'kufar' }),
          },
        ],
      ],
    };
  }

  Faq(): InlineKeyboardMarkup {
    return {
      inline_keyboard: [
        ...dataFaq.map(({ question }, index) => [
          {
            text: t(question),
            callback_data: JSON.stringify({
              action: 'faq_question_open',
              param: index,
            }),
          },
        ]),
      ],
    };
  }

  Premium(): InlineKeyboardMarkup {
    return {
      inline_keyboard: [
        [
          {
            text: t('–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'),
            callback_data: JSON.stringify({ action: 'buy_premium' }),
          },
        ],
        [
          {
            text: t('–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'),
            callback_data: JSON.stringify({ action: 'get_free_premium' }),
          },
        ],
      ],
    };
  }
}

const keyboard = new Keyboard();
export default keyboard;
