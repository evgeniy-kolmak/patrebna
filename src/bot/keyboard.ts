import db from 'config/db/databaseServise';
import { t } from 'i18next';
import {
  type InlineKeyboardMarkup,
  type ReplyKeyboardMarkup,
} from 'node-telegram-bot-api';

class Keyboard {
  Main(): ReplyKeyboardMarkup {
    return {
      keyboard: [
        [{ text: t('–ü—Ä–æ—Ñ–∏–ª—å') }, { text: t('–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å') }],
        [
          {
            text: t('–Ø–∑—ã–∫'),
          },
        ],
      ],
      resize_keyboard: true,
    };
  }

  async Profile(userID: number): Promise<InlineKeyboardMarkup> {
    const profile = await db.getProfile(userID);
    return {
      inline_keyboard: [
        [
          {
            text: `${profile?.link ? t('–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É') : t('–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É')}`,
            callback_data: 'add_link_kufar',
          },
        ],
        [
          {
            text: t('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'),
            callback_data: 'remove_me',
          },
        ],
        [{ text: t('–ù–∞–∑–∞–¥'), callback_data: 'back' }],
      ],
    };
  }

  Observe(): InlineKeyboardMarkup {
    return {
      inline_keyboard: [[{ text: 'üß© Kufar.by', callback_data: 'kufar' }]],
    };
  }

  SomeButtons(data: Array<[string, string]>): InlineKeyboardMarkup {
    return {
      inline_keyboard: data.map((button) => [
        { text: button[0], callback_data: button[1] },
      ]),
    };
  }

  Button(text: string, callback_data: string): InlineKeyboardMarkup {
    return {
      inline_keyboard: [[{ text, callback_data }]],
    };
  }
}

const keyboard = new Keyboard();
export default keyboard;
