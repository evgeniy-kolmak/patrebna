import i18next, { t } from 'i18next';
import { getUserLanguage } from 'config/lib/helpers/cacheLaguage';
import { editMessage } from 'config/lib/helpers/editMessage';
import db from 'config/db/databaseServise';

export async function handleGetFreePremium(
  chatId: number,
  messageId: number | undefined,
  callbackQueryId: string,
): Promise<void> {
  await i18next.changeLanguage(await getUserLanguage(chatId));
  const isSubscribedToChannel = await db.isChannelSubscriptionRewarded(chatId);

  const text = isSubscribedToChannel
    ? t('–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º–∞')
    : t('–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º–∞');

  const inline_keyboard = [
    ...(isSubscribedToChannel
      ? []
      : [
          [
            {
              text: `üîî ${t('–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª')}`,
              callback_data: JSON.stringify({ action: 'subscribe_channel' }),
            },
          ],
        ]),
    [
      {
        text: t('–ù–∞–∑–∞–¥'),
        callback_data: JSON.stringify({ action: 'back_premium' }),
      },
    ],
  ];

  await editMessage(chatId, messageId, text, callbackQueryId, {
    inline_keyboard,
  });
}
