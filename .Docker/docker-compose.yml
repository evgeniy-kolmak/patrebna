version: '3'
services:
  bot:
    build: 
      context: ../
      dockerfile: ./.Docker/bot/Dockerfile
    image: bot
    container_name: patrebna_bot
    restart: always
    ports:
      - "8443:8443"
    depends_on:
      - mongodb
      - redis
    networks:
      - patrebna-network  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: >
      bash -c "
      chmod 400 /etc/ssl/mongo-keyfile &&
      chown 999:999 /etc/ssl/mongo-keyfile &&
      mongod
      --replSet rs0
      --tlsMode requireTLS
      --tlsCertificateKeyFile /etc/ssl/mongodb.pem
      --tlsCAFile /etc/ssl/ca.pem
      --auth
      --keyFile /etc/ssl/mongo-keyfile
      --bind_ip_all"
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db
      - ../certs/mongodb/mongodb.pem:/etc/ssl/mongodb.pem
      - ../certs/ca.pem:/etc/ssl/ca.pem
      - ../certs/mongo-keyfile:/etc/ssl/mongo-keyfile
    networks:
      - patrebna-network
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ../certs/redis:/etc/ssl/redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: >
      redis-server
      --tls-port 6379
      --port 0
      --tls-cert-file /etc/ssl/redis/redis-cert.pem
      --tls-key-file /etc/ssl/redis/redis-key.pem
      --tls-ca-cert-file /etc/ssl/ca.pem
      --tls-auth-clients yes
      --requirepass $REDIS_PASSWORD
    networks:
      - patrebna-network
networks:
  patrebna-network:
    driver: bridge